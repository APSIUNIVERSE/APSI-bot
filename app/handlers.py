from aiogram import F, Router, Dispatcher
from aiogram.filters import CommandStart
from aiogram.types import Message, ContentType, InputFile
from aiogram.types import CallbackQuery
from aiogram.fsm.context import FSMContext
from aiogram.exceptions import TelegramBadRequest

from app.keyboards import main
from app.states import FigmaTask, TildaTask, BotTask

MANAGER_ID = ...

router = Router()


@router.message(CommandStart())
async def start(message: Message):
    await message.answer(
'''–ü—Ä–∏–≤–µ—Ç! üëã

–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç–∞ A.P.S.I. –ú—ã –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º —Å–ª–µ–¥—É—é—â–∏–µ —É—Å–ª—É–≥–∏:

üåê –°–æ–∑–¥–∞–Ω–∏–µ —Å–∞–π—Ç–æ–≤ –Ω–∞ Tilda: –ò–¥–µ–∞–ª—å–Ω—ã–µ —Å–∞–π—Ç—ã –¥–ª—è –≤–∞—à–µ–≥–æ –±–∏–∑–Ω–µ—Å–∞, –±–ª–æ–≥–∞ –∏–ª–∏ –ø—Ä–æ–µ–∫—Ç–∞.

üé® –î–∏–∑–∞–π–Ω –≤ Figma: –ö—Ä–∞—Å–∏–≤—ã–µ –∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ –º–∞–∫–µ—Ç—ã –¥–ª—è –ª—é–±—ã—Ö –Ω—É–∂–¥.

ü§ñ –†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–ª–µ–≥—Ä–∞–º –±–æ—Ç–æ–≤: –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –∏ –Ω–æ–≤—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –¥–ª—è –≤–∞—à–µ–≥–æ –±–∏–∑–Ω–µ—Å–∞.

–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–Ω—É –∏–∑ –æ–ø—Ü–∏–π –Ω–∏–∂–µ, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å:''', reply_markup=main)


@router.callback_query(F.data == 'Figma')
async def order_figma_callback(callback: CallbackQuery, state: FSMContext):
    if await state.get_state() is None:
        await callback.message.answer('–û—Ç–ª–∏—á–Ω—ã–π –≤—ã–±–æ—Ä! üåü\n\n–ú—ã —Ä–∞–¥—ã, —á—Ç–æ –≤—ã —Ä–µ—à–∏–ª–∏ –∑–∞–∫–∞–∑–∞—Ç—å –¥–∏–∑–∞–π–Ω –≤ Figma. –ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É –Ω–∞–¥ –≤–∞—à–∏–º –ø—Ä–æ–µ–∫—Ç–æ–º, –Ω–∞–º –Ω—É–∂–Ω–æ —Å–æ–±—Ä–∞—Ç—å –Ω–µ–º–Ω–æ–≥–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏.\n\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–µ –≤–æ–ø—Ä–æ—Å—ã:\n\n1) –û–ø–∏—à–∏—Ç–µ –≤–∞—à –ø—Ä–æ–µ–∫—Ç\n\n2) –ö–∞–∫–æ–π –¥–∏–∑–∞–π–Ω –≤–∞–º –Ω—É–∂–µ–Ω? (–¥–∏–∑–∞–π–Ω —Å–∞–π—Ç–∞ / –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è)\n\n3) –°—Å—ã–ª–∫–∏ –Ω–∞ –≤–∞—à–∏—Ö –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤?\n\n4) –ù—É–∂–Ω–∞ –ª–∏ –º–æ–±–∏–ª—å–Ω–∞—è –∞–¥–∞–ø—Ç–∞—Ü–∏—è?\n\n5) –ö–∞–∫–∏–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã –¥–ª—è –¥–∏–∑–∞–π–Ω–∞ —É–∂–µ –∏–º–µ—é—Ç—Å—è?\n\n<b>–û—Ç–ø—Ä–∞–≤—å—Ç–µ –æ—Ç–≤–µ—Ç –Ω–∞ –≤—Å–µ –≤–æ–ø—Ä–æ—Å—ã –≤ –æ–¥–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏</b>', parse_mode='html')
        await callback.answer('')
        await state.set_state(FigmaTask.Brief)


@router.message(FigmaTask.Brief)
async def brief(message: Message, state: FSMContext):
    if message.text:
        username = message.from_user.username
        if username:
            from config import bot
            await bot.send_message(MANAGER_ID, text=f'–ó–∞–∫–∞–∑: –î–∏–∑–∞–π–Ω –≤ Figma\n–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{username} –∑–∞–ø–æ–ª–Ω–∏–ª –±—Ä–∏—Ñ:\n {message.text}')
            await message.answer('–°–ø–∞—Å–∏–±–æ! –° –í–∞–º–∏ —Å–∫–æ—Ä–æ —Å–≤—è–∂–µ—Ç—Å—è —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç')
            await state.clear()
        else:
            await bot.send_message(MANAGER_ID, text=f'–ó–∞–∫–∞–∑: –î–∏–∑–∞–π–Ω –≤ Figma\n–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–ø–æ–ª–Ω–∏–ª –±—Ä–∏—Ñ:\n {message.text}\n\n–ñ–¥–µ–º –µ–≥–æ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞!')
            await message.answer('–ö–∞–∂–µ—Ç—Å—è, —É –≤–∞—Å –Ω–µ—Ç –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –∞–∫–∫–∞—É–Ω—Ç–µ —Ç–µ–ª–µ–≥—Ä–∞–º\n–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∏–ª–∏ –¥—Ä—É–≥–æ–π –º–µ—Ç–æ–¥ —Å–≤—è–∑–∏')
            await state.set_state(FigmaTask.Number)

            
@router.message(FigmaTask.Number)
async def number(message: Message, state:FSMContext):
    if message.text:
        from config import bot
        await bot.send_message(MANAGER_ID, text=f'–°–≤—è–∑—å —Å –∑–∞–∫–∞–∑—á–∏–∫–æ–º:\n{message.text}')
        await message.answer('–°–ø–∞—Å–∏–±–æ! –° –í–∞–º–∏ —Å–∫–æ—Ä–æ —Å–≤—è–∂–µ—Ç—Å—è —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç')
        await state.clear()
        


@router.callback_query(F.data == 'Tilda')
async def tilda_callback(callback: CallbackQuery, state: FSMContext):
    if await state.get_state() is None:
        await callback.message.answer('–û—Ç–ª–∏—á–Ω—ã–π –≤—ã–±–æ—Ä! üåü\n\n–ú—ã —Ä–∞–¥—ã, —á—Ç–æ –≤—ã —Ä–µ—à–∏–ª–∏ –∑–∞–∫–∞–∑–∞—Ç—å —Å–∞–π—Ç –Ω–∞ Tilda. –ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É –Ω–∞–¥ –≤–∞—à–∏–º –ø—Ä–æ–µ–∫—Ç–æ–º, –Ω–∞–º –Ω—É–∂–Ω–æ —Å–æ–±—Ä–∞—Ç—å –Ω–µ–º–Ω–æ–≥–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏.\n\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–µ –≤–æ–ø—Ä–æ—Å—ã:\n\n1) –û–ø–∏—à–∏—Ç–µ –≤–∞—à –ø—Ä–æ–µ–∫—Ç\n\n2) –ö–∞–∫–∏–µ —Ü–µ–ª–∏ –±—É–¥—É—Ç —É –≤–∞—à–µ–≥–æ —Å–∞–π—Ç–∞?\n\n3) –°—Å—ã–ª–∫–∏ –Ω–∞ –≤–∞—à–∏—Ö –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤?\n\n4) –ö–∞–∫–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –Ω–∞ —Å–∞–π—Ç–µ?\n\n5) –ö–∞–∫–∏–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã –¥–ª—è —Å–∞–π—Ç–∞ —É–∂–µ –∏–º–µ—é—Ç—Å—è?\n\n<b>–û—Ç–ø—Ä–∞–≤—å—Ç–µ –æ—Ç–≤–µ—Ç –Ω–∞ –≤—Å–µ –≤–æ–ø—Ä–æ—Å—ã –≤ –æ–¥–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏!</b>', parse_mode='HTML')
        await callback.answer('')
        await state.set_state(TildaTask.Brief)


@router.message(TildaTask.Brief)
async def brief(message: Message, state: FSMContext):
    if message.text:
        username = message.from_user.username
        if username:
            from config import bot
            await bot.send_message(MANAGER_ID, text=f'–ó–∞–∫–∞–∑: –°–∞–π—Ç Tilda\n–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{username} –∑–∞–ø–æ–ª–Ω–∏–ª –±—Ä–∏—Ñ:\n {message.text}')
            await message.answer('–°–ø–∞—Å–∏–±–æ! –° –í–∞–º–∏ —Å–∫–æ—Ä–æ —Å–≤—è–∂–µ—Ç—Å—è —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç')
            await state.clear()
        else:
            await bot.send_message(MANAGER_ID, text=f'–ó–∞–∫–∞–∑: –°–∞–π—Ç Tilda\n–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–ø–æ–ª–Ω–∏–ª –±—Ä–∏—Ñ:\n {message.text}\n\n–ñ–¥–µ–º –µ–≥–æ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞!')
            await message.answer('–ö–∞–∂–µ—Ç—Å—è, —É –≤–∞—Å –Ω–µ—Ç –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –∞–∫–∫–∞—É–Ω—Ç–µ —Ç–µ–ª–µ–≥—Ä–∞–º\n–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∏–ª–∏ –¥—Ä—É–≥–æ–π –º–µ—Ç–æ–¥ —Å–≤—è–∑–∏')
            await state.set_state(TildaTask.Number)


@router.message(TildaTask.Number)
async def number(message: Message, state:FSMContext):
    if message.text:
        from config import bot
        await bot.send_message(MANAGER_ID, text=f'–°–≤—è–∑—å —Å –∑–∞–∫–∞–∑—á–∏–∫–æ–º:\n{message.text}')
        await message.answer('–°–ø–∞—Å–∏–±–æ! –° –í–∞–º–∏ —Å–∫–æ—Ä–æ —Å–≤—è–∂–µ—Ç—Å—è —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç')
        await state.clear()


@router.callback_query(F.data == 'Bot')
async def bot_callback(callback: CallbackQuery, state: FSMContext):
   if await state.get_state() is None:
        await callback.message.answer('–û—Ç–ª–∏—á–Ω—ã–π –≤—ã–±–æ—Ä! üåü\n\n–ú—ã —Ä–∞–¥—ã, —á—Ç–æ –≤—ã —Ä–µ—à–∏–ª–∏ –∑–∞–∫–∞–∑–∞—Ç—å —Ä–∞–∑—Ä–∞–±–æ—Ç–∫—É —Ç–µ–ª–µ–≥—Ä–∞–º –±–æ—Ç–∞. –ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É –Ω–∞–¥ –≤–∞—à–∏–º –ø—Ä–æ–µ–∫—Ç–æ–º, –Ω–∞–º –Ω—É–∂–Ω–æ —Å–æ–±—Ä–∞—Ç—å –Ω–µ–º–Ω–æ–≥–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏.\n\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–µ –≤–æ–ø—Ä–æ—Å—ã:\n\n1. –û–ø–∏—à–∏—Ç–µ –≤–∞—à –ø—Ä–æ–µ–∫—Ç\n\n2. –ö–∞–∫–∏–µ —Ü–µ–ª–∏ –±—É–¥—É—Ç —É –±–æ—Ç–∞\n\n3. –°—Å—ã–ª–∫–∏ –Ω–∞ –≤–∞—à–∏—Ö –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤\n\n4. –ù—É–∂–Ω–∞ –ª–∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –ø–æ—Å–ª–µ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞?\n\n<b>–û—Ç–ø—Ä–∞–≤—å—Ç–µ –æ—Ç–≤–µ—Ç –Ω–∞ –≤—Å–µ –≤–æ–ø—Ä–æ—Å—ã –≤ –æ–¥–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏</b>', parse_mode="html")
        await callback.answer('')
        await state.set_state(BotTask.Brief)


@router.message(BotTask.Brief)
async def brief(message: Message, state: FSMContext):
    if message.text:
        username = message.from_user.username
        if username:
            from config import bot
            await bot.send_message(MANAGER_ID, text=f'–ó–∞–∫–∞–∑: –ë–æ—Ç —Ç–≥\n–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{username} –∑–∞–ø–æ–ª–Ω–∏–ª –±—Ä–∏—Ñ:\n {message.text}')
            await message.answer('–°–ø–∞—Å–∏–±–æ! –° –í–∞–º–∏ —Å–∫–æ—Ä–æ —Å–≤—è–∂–µ—Ç—Å—è —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç')
            await state.clear()
        else:
            await bot.send_message(MANAGER_ID, text=f'–ó–∞–∫–∞–∑: –ë–æ—Ç —Ç–≥\n–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–ø–æ–ª–Ω–∏–ª –±—Ä–∏—Ñ:\n {message.text}\n\n–ñ–¥–µ–º –µ–≥–æ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞!')
            await message.answer('–ö–∞–∂–µ—Ç—Å—è, —É –≤–∞—Å –Ω–µ—Ç –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –∞–∫–∫–∞—É–Ω—Ç–µ —Ç–µ–ª–µ–≥—Ä–∞–º\n–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∏–ª–∏ –¥—Ä—É–≥–æ–π –º–µ—Ç–æ–¥ —Å–≤—è–∑–∏')
            await state.set_state(BotTask.Number)


@router.message(BotTask.Number)
async def number(message: Message, state:FSMContext):
    if message.text:
        from config import bot
        await bot.send_message(MANAGER_ID, text=f'–°–≤—è–∑—å —Å –∑–∞–∫–∞–∑—á–∏–∫–æ–º:\n{message.text}')
        await message.answer('–°–ø–∞—Å–∏–±–æ! –° –í–∞–º–∏ —Å–∫–æ—Ä–æ —Å–≤—è–∂–µ—Ç—Å—è —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç')
        await state.clear()